/* YourDuino SKETCH UltraSonic Serial 2.0
 Runs HC-04 and SRF-06 and other Ultrasonic Modules
 Open Serial Monitor to see results
 Reference: http://playground.arduino.cc/Code/NewPing
 Questions?  terry@yourduino.com */

/*-----( Import needed libraries )-----*/
#include <NewPing.h>

/*--------Instantiate node handle-------------*/

/*-----( Declare Constants and Pin Numbers )-----*/
#define  TRIGGER_PIN1  11
#define  ECHO_PIN1     10
#define  TRIGGER_PIN2  9
#define  ECHO_PIN2     8
#define  TRIGGER_PIN3  7
#define  ECHO_PIN3     6


#define MAX_DISTANCE 200 // Maximum distance we want to ping for (in centimeters).
                         //Maximum sensor distance is rated at 400-500cm.
/*-----( Declare objects )-----*/
NewPing sonar1(TRIGGER_PIN1, ECHO_PIN1, MAX_DISTANCE); // NewPing setup of pins and maximum distance.
NewPing sonar2(TRIGGER_PIN2, ECHO_PIN2, MAX_DISTANCE); // NewPing setup of pins and maximum distance.
NewPing sonar3(TRIGGER_PIN3, ECHO_PIN3, MAX_DISTANCE); // NewPing setup of pins and maximum distance.
/*-----( Declare Variables )-----*/
int DistanceIn;
int DistanceCm;
int Front;
int Side1;
int Side2;



void setup()   /****** SETUP: RUNS ONCE ******/
{
  Serial.begin(9600);
  Serial.println("------------------BEGIN----------------------");
  Serial.println("---------------------------------------------------");
  
}//--(end setup )---


void loop()   /****** LOOP: RUNS CONSTANTLY ******/
{
  int dataArray[3] = {Front,Side1,Side2};
  delay(100);// Wait 100ms between pings (about 10 pings/sec). 29ms should be the shortest delay between pings.
  DistanceIn = sonar1.ping_in();
  Serial.print("Front: ");
  Serial.print(DistanceIn); // Convert ping time to distance and print result 
                            // (0 = outside set distance range, no ping echo)

  Front = DistanceIn;
  Serial.print(" in     ");
  
  delay(100);// Wait 100ms between pings (about 10 pings/sec). 29ms should be the shortest delay between pings.
  DistanceCm = sonar1.ping_cm();
  Serial.print("Convert: ");
  Serial.print(DistanceCm); 
  Serial.println(" cm");  

  Serial.println("------------------FRONT---------------------");
  Serial.println("---------------------------------------------------");
/*-------------------------------------------------------------------------------------------------------------------------------*/
  delay(100);// Wait 100ms between pings (about 10 pings/sec). 29ms should be the shortest delay between pings.
  DistanceIn = sonar2.ping_in();
  Serial.print("Side1: ");
  Serial.print(DistanceIn); // Convert ping time to distance and print result 
                            // (0 = outside set distance range, no ping echo)

  Side1 = DistanceIn;
  Serial.print(" in     ");
  
  delay(100);// Wait 100ms between pings (about 10 pings/sec). 29ms should be the shortest delay between pings.
  DistanceCm = sonar2.ping_cm();
  Serial.print("Convert: ");
  Serial.print(DistanceCm); 
  Serial.println(" cm"); 

  Serial.println("--------------------SIDE1-------------------------");
  Serial.println("---------------------------------------------------");

/*-------------------------------------------------------------------------------------------------------------------------------*/

  delay(100);// Wait 100ms between pings (about 10 pings/sec). 29ms should be the shortest delay between pings.
  DistanceIn = sonar3.ping_in();
  Serial.print("Side2: ");
  Serial.print(DistanceIn); // Convert ping time to distance and print result 
                            // (0 = outside set distance range, no ping echo)

  Side2 = DistanceIn;
  Serial.print(" in     ");
  
  delay(100);// Wait 100ms between pings (about 10 pings/sec). 29ms should be the shortest delay between pings.
  DistanceCm = sonar3.ping_cm();
  Serial.print("Convert: ");
  Serial.print(DistanceCm); 
  Serial.println(" cm"); 

  Serial.println("-----------------------SIDE2---------------------");
  Serial.println("---------------------------------------------------");
  //dataArray[] = {Front,Side1,Side2};
 

}//--(end main loop )---




/*-----( Declare User-written Functions )-----*/

// None
//*********( THE END )***********
